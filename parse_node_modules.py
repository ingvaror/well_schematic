import json
import os
import xlsxwriter


class LegallyData:
    def __init__(self, _homepage, _license, _version, _author):
        self.homepage = _homepage
        self.license = _license
        self.version = _version
        self.author = _author


def extract_legally_data(package_json_io):
    _json = json.load(package_json_io)
    _license = ''
    _homepage = ''
    _version = ''
    _author = ''
    if 'homepage' in _json:
        _homepage = _json['homepage']
    elif 'repository' in _json:
        _homepage = _json['repository']['url']
    if 'license' in _json:
        if 'type' in _json['license']:
            _license = _json['license']['type']
        else:
            _license = _json['license']
    elif 'licenses' in _json:
        if 'type' in _json['licenses'][0]:
            _license = _json['licenses'][0]['type']
        else:
            _license = _json['licenses'][0]
    if 'version' in _json:
        _version = _json['version']
    if 'author' in _json:
        if 'name' in _json['author']:
            _author = _json['author']['name']
        else:
            _author = _json['author']
    return LegallyData(_homepage, _license, _version, _author)


def process_package_json(stat_data, rows, count_error):
    try:
        with open(stat_data.root + '/package.json') as package_json:
            legally_data = extract_legally_data(package_json)
            stat_data.legaly_data = legally_data
            if stat_data.root.endswith('traverse/scripts') \
                    or stat_data.root.endswith('types/scripts') \
                    or stat_data.root.endswith('helpers/scripts') \
                    or stat_data.root.endswith('helpers/esm') \
                    or stat_data.root.endswith('html-escaper/cjs') \
                    or stat_data.root.endswith('html-escaper/test'):
                return [rows, count_error, False]
            if legally_data.license == '':
                count_error = count_error + 1
                print('{0}: ERROR!!!! Don\'t have license'.format(count_error))
            if legally_data.license == '':
                count_error = count_error + 1
                print('{0}: ERROR!!!! Don\'t have version'.format(count_error))
            if 'http://github.com/veged/coa' == legally_data.homepage:
                print('@@coa: ' + stat_data.root + '\n')
                print('@@coa_version: ' + legally_data.version + '\n')
            if not legally_output_filter.__contains__(legally_data.homepage):
                library_name = stat_data.root[stat_data.root.rfind('node_modules') + 'node_modules'.__len__() + 1:]
                locations = 'netool/web/well_schematic' + stat_data.root.replace('./node_modules', '/node_modules')
                print('Library name: ' + library_name)
                print('License: ' + legally_data.license)
                print('Homepage: ' + legally_data.homepage)
                print('Locations: ', locations)
                legally_output_filter[legally_data.homepage] = legally_data

                legally_worksheet.write('A' + str(rows), str(library_name))
                legally_worksheet.write('B' + str(rows), str(legally_data.version))
                legally_worksheet.write('C' + str(rows), str(legally_data.license))
                legally_worksheet.write('D' + str(rows), str(legally_data.homepage))
                legally_worksheet.write('E' + str(rows), str(locations))
                return [rows + 1, count_error, True]
            else:
                print('Already added')
                return [rows, count_error, False]
    except:
        count_error = count_error + 1
        print('{0}: ERROR!!!! Don\'t have key'.format(count_error))
        return [rows, count_error, False]


def process_license_file(license_file_name):
    try:
        with open(stat_data.root + '/' + license_file_name) as license_file:
            for line in license_file.readlines():
                if 'Copyright (c) ' in line:
                    return line.rstrip().lstrip()
    except:
        return ""


def add_copyright_info(rows, copyright_info):
    legally_worksheet.write('F' + str(rows), str(copyright_info))


important_files = ['license.txt', 'license-mit.txt', 'license-mit', 'license', 'license.bsd', 'license.md', 'package.json']


class StatisticData:
    def __init__(self):
        self.root = ''
        self.subdirs = ''
        self.important = []
        self.legaly_data = LegallyData('', '', '', '')


files_statistics = []
for root, subdirs, files in os.walk('./node_modules'):
    new_data = StatisticData()
    new_data.root = root
    new_data.subdirs = subdirs
    for file in files:
        if file.lower() in important_files:
            new_data.important.append(file)
    files_statistics.append(new_data)

counts = [0, 0, 0]
count_error = 0

legally_output_filter = {}
rows = 2
legally_output = xlsxwriter.Workbook('legally.xlsx')
legally_worksheet = legally_output.add_worksheet()
cell_format = legally_output.add_format({'bg_color': 'orange'})
legally_worksheet.write('A1', 'Library name', cell_format)
legally_worksheet.write('B1', 'Library version', cell_format)
legally_worksheet.write('C1', 'License', cell_format)
legally_worksheet.write('D1', 'Homepage', cell_format)
legally_worksheet.write('E1', 'Locations', cell_format)
legally_worksheet.write('F1', 'Copyright', cell_format)
for stat_data in files_statistics:
    added = False
    if len(stat_data.important) > 0:
        print('files: {0}'.format(stat_data.important))
        print('root dir: ' + stat_data.root)
    if len(stat_data.important) == 1:
        counts[0] = counts[0] + 1
        if 'package.json' in stat_data.important:
            [rows, count_error, added] = process_package_json(stat_data, rows, count_error)
        else:
            count_error = count_error + 1
            print('{0}: ERROR!!!! Only license without package.json\n'.format(count_error))
    elif len(stat_data.important) == 2:
        counts[1] = counts[1] + 1
        if 'package.json' in stat_data.important:
            [rows, count_error, added] = process_package_json(stat_data, rows, count_error)
            print('\n')

    elif len(stat_data.important) > 2:
        counts[2] = counts[2] + 1
        if 'package.json' in stat_data.important:
            [rows, count_error, added] = process_package_json(stat_data, rows, count_error)
        else:
            count_error = count_error + 1
            print('{0}: ERROR!!!!: More than two files in directory\n'.format(count_error))

    if added:
        copyright_info = ""
        for license_file_name in stat_data.important:
            if license_file_name != 'package.json':
                copyright_info = process_license_file(license_file_name)
                if copyright_info != "":
                    add_copyright_info(rows - 1, copyright_info)
        if (copyright_info is None or copyright_info == '' or copyright_info == 'None') and stat_data.legaly_data.author != "":
            add_copyright_info(rows - 1, 'Copyright (c) ' + stat_data.legaly_data.author)

    if len(stat_data.important) > 0:
        print('\n')
legally_output.close()

print('one file {0:d}'.format(counts[0]))
print('two files {0:d}'.format(counts[1]))
print('More than two files {0:d}'.format(counts[2]))
